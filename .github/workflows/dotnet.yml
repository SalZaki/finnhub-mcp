name: .NET Restore, Build, Test, and Coverage

on:
  push:
    branches: [main, develop]
    paths-ignore:
      - 'Docs/**'
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - 'Docs/**'
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  checks: write
  id-token: write

jobs:
  build:
    name: 🛠️ Build Solution
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🧰 Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: 📦 Restore dependencies
        run: dotnet restore ./mcp-finnhub.sln

      - name: 🏗️ Build solution
        run: dotnet build -p:CurrentYear=$(date +'%Y') --no-restore --configuration Release

  format:
    name: 🎨 Code Style Check
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🧰 Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: ✅ Verify code formatting
        run: dotnet format --verify-no-changes --verbosity diagnostic

  test:
    name: 🧪 Unit Tests & 📊 Coverage
    runs-on: ubuntu-latest
    needs: format

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v2

      - name: 🧰 Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: 🧪 Run unit tests with coverage
        run: |
          dotnet test ./test/MCP.FinnHub.Server.SSE.Tests.Unit/MCP.FinnHub.Server.SSE.Tests.Unit.csproj \
          --configuration Release \
          --collect:'XPlat Code Coverage' \
          --verbosity normal \
          -p:CollectCoverage=true \
          -p:CoverletOutputFormat=cobertura \
          -p:ExcludeByAttribute=GeneratedCodeAttribute \
          -p:CoverletOutput=./test/MCP.FinnHub.Server.SSE.Tests.Unit/TestResults

      - name: 📂 Show test result files
        run: ls -R ./test/MCP.FinnHub.Server.SSE.Tests.Unit/TestResults

      - name: 📤 Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./test/MCP.FinnHub.Server.SSE.Tests.Unit/TestResults/coverage.cobertura.xml
          flags: unit-tests
          name: codecov-mcp-finnhub

      - name: 📁 Upload test results
        uses: actions/upload-artifact@v4
        with:
           name: test-results
           path: ./test/MCP.FinnHub.Server.SSE.Tests.Unit/TestResults/
