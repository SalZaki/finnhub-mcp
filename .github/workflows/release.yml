name: Release

on:
  push:
    branches:
      - main
      - release
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'assets/**'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  release:
    name: 📦 Create GitHub Release
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      upload_url: ${{ steps.release.outputs.upload_url }}

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔖 Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          release-type: simple
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .release-please-config.json

  build:
    name: 🔧 Build & Upload Artifacts
    needs: release
    if: ${{ needs.release.outputs.release_created }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            runtime: win-x86
            artifact_name: finnhub-mcp-win-x86.exe
          - os: windows-latest
            runtime: win-x64
            artifact_name: finnhub-mcp-win-x64.exe
          - os: windows-latest
            runtime: win-arm
            artifact_name: finnhub-mcp-win-arm.exe
          - os: windows-latest
            runtime: win-arm64
            artifact_name: finnhub-mcp-win-arm64.exe

          - os: ubuntu-latest
            runtime: linux-x64
            artifact_name: finnhub-mcp-linux-x64
          - os: ubuntu-latest
            runtime: linux-arm
            artifact_name: finnhub-mcp-linux-arm
          - os: ubuntu-latest
            runtime: linux-arm64
            artifact_name: finnhub-mcp-linux-arm64
          - os: ubuntu-latest
            runtime: linux-musl-x64
            artifact_name: finnhub-mcp-linux-musl-x64
          - os: ubuntu-latest
            runtime: linux-musl-arm
            artifact_name: finnhub-mcp-linux-musl-arm
          - os: ubuntu-latest
            runtime: linux-musl-arm64
            artifact_name: finnhub-mcp-linux-musl-arm64

          - os: macos-latest
            runtime: osx-x64
            artifact_name: finnhub-mcp-osx-x64
          - os: macos-latest
            runtime: osx-arm64
            artifact_name: finnhub-mcp-osx-arm64

    runs-on: ${{ matrix.os }}

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🧰 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: 📦 Restore
        run: dotnet restore ./finnhub-mcp.sln

      - name: 🏗️ Build
        run: |
          VERSION_CLEAN=${{ needs.release.outputs.tag_name }} && VERSION_CLEAN=${VERSION_CLEAN#v}
          dotnet build src/FinnHub.MCP.Server/FinnHub.MCP.Server.csproj \
            -c Release \
            --no-restore \
            -p:Version=$VERSION_CLEAN

      - name: 📦 Publish
        run: |
          VERSION_CLEAN=${{ needs.release.outputs.tag_name }} && VERSION_CLEAN=${VERSION_CLEAN#v}
          dotnet publish src/FinnHub.MCP.Server/FinnHub.MCP.Server.csproj \
            -c Release -r ${{ matrix.runtime }} \
            --self-contained true \
            --no-build \
            --no-restore \
            -p:Version=$VERSION_CLEAN \
            -p:DebugType=None \
            -p:DebugSymbols=false \
            -p:PublishSingleFile=true \
            -o ./publish

      - name: 🧼 Prepare Artifact
        shell: bash
        run: |
          cd ./publish
          if [ "${{ matrix.runtime }}" == "win-x64" ]; then
            EXEC=$(find . -name "*.exe" -type f | head -1)
            mv "$EXEC" ${{ matrix.artifact_name }}
          else
            EXEC=$(find . -type f -perm -111 ! -name "*.dll" ! -name "*.so" ! -name "*.dylib" ! -name "*.json" ! -name "*.pdb" | head -1)
            if [ -n "$EXEC" ]; then
              mv "$EXEC" ${{ matrix.artifact_name }}
            else
              EXEC=$(find . -type f ! -name "*.*" | head -1)
              mv "$EXEC" ${{ matrix.artifact_name }}
            fi
          fi

      - name: 🚀 Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.release.outputs.tag_name }}
          files: |
            ./publish/${{ matrix.artifact_name }}
            ./publish/appsettings.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
