name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: 📦 Create GitHub Release
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔖 Release Please
        id: release
        uses: google-github-actions/release-please-action@v4
        with:
          release-type: simple
          token: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: 🔧 Build & Upload Artifacts
    needs: release
    if: ${{ needs.release.outputs.release_created }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            runtime: linux-x64
            artifact_name: finnhub-mcp-linux-x64
          - os: windows-latest
            runtime: win-x64
            artifact_name: finnhub-mcp-win-x64.exe
          - os: macos-latest
            runtime: osx-x64
            artifact_name: finnhub-mcp-osx-x64

    runs-on: ${{ matrix.os }}

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🧰 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: 📦 Restore
        run: dotnet restore

      - name: 🏗️ Build & Publish
        run: dotnet publish src/FinnHub.MCP.Server/FinnHub.MCP.Server.csproj -c Release -r ${{ matrix.runtime }} --self-contained true -p:PublishSingleFile=true -o ./publish

      - name: 🧼 Prepare Artifact
        shell: bash
        run: |
          cd ./publish
          if [ "${{ matrix.runtime }}" == "win-x64" ]; then
            EXEC=$(find . -name "*.exe" -type f | head -1)
            mv "$EXEC" ${{ matrix.artifact_name }}
          else
            EXEC=$(find . -type f -perm -111 ! -name "*.dll" ! -name "*.so" ! -name "*.dylib" ! -name "*.json" ! -name "*.pdb" | head -1)
            if [ -n "$EXEC" ]; then
              mv "$EXEC" ${{ matrix.artifact_name }}
            else
              EXEC=$(find . -type f ! -name "*.*" | head -1)
              mv "$EXEC" ${{ matrix.artifact_name }}
            fi
          fi

      - name: 🚀 Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: ./publish/${{ matrix.artifact_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
